#!/usr/bin/env python3
"""
pressure_sensor - Generated by RobotStudio

ROS2 publisher node

Generated on: 2025-10-29 16:33:47
"""

import rclpy
from rclpy.node import Node
from std_msgs.msg import String


class PressureSensorNode(Node):
    """ROS2 publisher node"""

    def __init__(self):
        super().__init__('pressure_sensor')

        self.get_logger().info('pressure_sensor starting...')

        # Publishers
        self.publisher = self.create_publisher(
            String,
            '/topic',
            10
        )

        # Timers
        self.timer = self.create_timer(
            1.0,
            self.timer_callback
        )

        self.get_logger().info('pressure_sensor initialized successfully')

    def timer_callback(self):
        """Timer callback - executes every 1.0 seconds"""
        # Create and publish message
        msg = String()
        # TODO: Set message fields
        # msg.data = 'Hello ROS2!'
        self.publisher.publish(msg)
        self.get_logger().info(f'Publishing to /topic')



def main(args=None):
    """Main entry point"""
    rclpy.init(args=args)

    node = PressureSensorNode()

    try:
        rclpy.spin(node)
    except KeyboardInterrupt:
        pass
    except Exception as e:
        # Handle external shutdown and other exceptions gracefully
        node.get_logger().warn(f'Node interrupted: {type(e).__name__}')
    finally:
        node.get_logger().info('pressure_sensor shutting down')
        node.destroy_node()

        # Only shutdown if context is still valid
        try:
            if rclpy.ok():
                rclpy.shutdown()
        except Exception:
            # Context already shutdown - this is fine
            pass


if __name__ == '__main__':
    main()