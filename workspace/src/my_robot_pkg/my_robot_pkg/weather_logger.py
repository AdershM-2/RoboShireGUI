#!/usr/bin/env python3
"""
weather_logger - Generated by RobotStudio

ROS2 subscriber node

Generated on: 2025-10-29 16:33:47
"""

import rclpy
from rclpy.node import Node
from std_msgs.msg import String


class WeatherLoggerNode(Node):
    """ROS2 subscriber node"""

    def __init__(self):
        super().__init__('weather_logger')

        self.get_logger().info('weather_logger starting...')

        # Subscribers
        self.subscriber = self.create_subscription(
            String,
            '/topic',
            self.subscriber_callback,
            10
        )

        self.get_logger().info('weather_logger initialized successfully')

    def subscriber_callback(self, msg):
        """
        Callback for subscriber on topic '/topic'

        Args:
            msg: String message
        """
        self.get_logger().info(f'Received: {msg}')



def main(args=None):
    """Main entry point"""
    rclpy.init(args=args)

    node = WeatherLoggerNode()

    try:
        rclpy.spin(node)
    except KeyboardInterrupt:
        pass
    except Exception as e:
        # Handle external shutdown and other exceptions gracefully
        node.get_logger().warn(f'Node interrupted: {type(e).__name__}')
    finally:
        node.get_logger().info('weather_logger shutting down')
        node.destroy_node()

        # Only shutdown if context is still valid
        try:
            if rclpy.ok():
                rclpy.shutdown()
        except Exception:
            # Context already shutdown - this is fine
            pass


if __name__ == '__main__':
    main()